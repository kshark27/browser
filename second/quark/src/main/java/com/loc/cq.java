package com.loc;

import android.content.Context;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.util.SparseArray;
import com.alibaba.wireless.security.open.nocaptcha.INoCaptchaComponent;
import com.amap.api.location.AMapLocation;
import com.autonavi.aps.amapapi.model.AmapLoc;
import java.util.HashMap;
import java.util.Locale;
import org.json.JSONObject;

/* compiled from: ProGuard */
public final class cq {
    public static String a = null;
    public static String b = null;
    public static String c = null;
    public static String d = "";
    public static int e = 30000;
    public static String f = null;
    public static String g = null;
    public static int h = 20;
    public static boolean i = true;
    public static int j = 1;
    static String k;
    static HashMap<String, String> l;
    public static final SparseArray<String> m;
    public static boolean n = false;
    public static boolean o = false;
    static boolean p = false;
    static boolean q = false;
    private static String r = "http://apilocate.amap.com/mobile/binary";
    private static String[] s = new String[]{"com.amap.api.location", "com.loc"};
    private static String t = "001;002;11B;11C;11E;11F;11G;11H;11I;11K;122;123;13A;135";

    static {
        SparseArray sparseArray = new SparseArray();
        m = sparseArray;
        sparseArray.append(0, "UNKWN");
        m.append(1, "GPRS");
        m.append(2, "EDGE");
        m.append(3, "UMTS");
        m.append(4, "CDMA");
        m.append(5, "EVDO_0");
        m.append(6, "EVDO_A");
        m.append(7, "1xRTT");
        m.append(8, "HSDPA");
        m.append(9, "HSUPA");
        m.append(10, "HSPA");
        m.append(11, "IDEN");
        m.append(12, "EVDO_B");
        m.append(13, "LTE");
        m.append(14, "EHRPD");
        m.append(15, "HSPAP");
    }

    public static AMapLocation a(AmapLoc amapLoc) {
        if (amapLoc == null) {
            return null;
        }
        int i = amapLoc.g;
        AMapLocation aMapLocation = new AMapLocation("");
        aMapLocation.setLatitude(amapLoc.c);
        aMapLocation.setLongitude(amapLoc.b);
        aMapLocation.setAccuracy(amapLoc.d);
        if (i == 0) {
            aMapLocation.setTime(amapLoc.e);
        } else {
            aMapLocation.setTime(System.currentTimeMillis());
        }
        aMapLocation.setCountry(amapLoc.p);
        aMapLocation.setRoad(amapLoc.t);
        aMapLocation.setErrorCode(i);
        aMapLocation.setErrorInfo(amapLoc.h);
        aMapLocation.setLocationDetail(amapLoc.j);
        aMapLocation.setLocationType(amapLoc.i);
        aMapLocation.setPoiName(amapLoc.v);
        aMapLocation.setStreet(amapLoc.u);
        aMapLocation.setNumber(amapLoc.z);
        aMapLocation.setOffset(amapLoc.B);
        Bundle bundle = new Bundle();
        bundle.putString("citycode", amapLoc.m);
        bundle.putString("desc", amapLoc.n);
        bundle.putString("adcode", amapLoc.o);
        aMapLocation.setExtras(bundle);
        String str = amapLoc.m;
        String str2 = amapLoc.n;
        String str3 = amapLoc.o;
        aMapLocation.setCityCode(str);
        aMapLocation.setAdCode(str3);
        if (str3 == null || str3.trim().length() <= 0) {
            aMapLocation.setAddress(str2);
        } else {
            aMapLocation.setAddress(str2.replace(" ", ""));
        }
        aMapLocation.setCity(amapLoc.r);
        aMapLocation.setDistrict(amapLoc.s);
        aMapLocation.setProvince(amapLoc.q);
        aMapLocation.setAoiName(amapLoc.A);
        return aMapLocation;
    }

    public static AMapLocation a(JSONObject jSONObject) {
        AMapLocation aMapLocation = new AMapLocation("");
        String str = "";
        String str2 = "";
        String str3 = "";
        try {
            if (dm.a(jSONObject, "accuracy")) {
                aMapLocation.setAccuracy(Float.parseFloat(jSONObject.getString("accuracy")));
            }
            if (dm.a(jSONObject, "adCode")) {
                str = jSONObject.getString("adCode");
                aMapLocation.setAdCode(str);
            }
            if (dm.a(jSONObject, "address")) {
                aMapLocation.setAddress(jSONObject.getString("address"));
            }
            if (dm.a(jSONObject, "altitude")) {
                aMapLocation.setAltitude(jSONObject.getDouble("altitude"));
            }
            if (dm.a(jSONObject, "bearing")) {
                aMapLocation.setBearing(Float.parseFloat(jSONObject.getString("bearing")));
            }
            if (dm.a(jSONObject, "speed")) {
                aMapLocation.setSpeed(Float.parseFloat(jSONObject.getString("speed")));
            }
            if (dm.a(jSONObject, "city")) {
                aMapLocation.setCity(jSONObject.getString("city"));
            }
            if (dm.a(jSONObject, "cityCode")) {
                str2 = jSONObject.getString("cityCode");
                aMapLocation.setCityCode(str2);
            }
            if (dm.a(jSONObject, "country")) {
                aMapLocation.setCountry(jSONObject.getString("country"));
            }
            if (dm.a(jSONObject, "district")) {
                aMapLocation.setDistrict(jSONObject.getString("district"));
            }
            if (dm.a(jSONObject, INoCaptchaComponent.errorCode)) {
                aMapLocation.setErrorCode(jSONObject.getInt(INoCaptchaComponent.errorCode));
            }
            if (dm.a(jSONObject, "errorInfo")) {
                aMapLocation.setErrorInfo(jSONObject.getString("errorInfo"));
            }
            if (dm.a(jSONObject, "latitude")) {
                aMapLocation.setLatitude(jSONObject.getDouble("latitude"));
            }
            if (dm.a(jSONObject, "locationDetail")) {
                aMapLocation.setLocationDetail(jSONObject.getString("locationDetail"));
            }
            if (dm.a(jSONObject, "locationType")) {
                aMapLocation.setLocationType(jSONObject.getInt("locationType"));
            }
            if (dm.a(jSONObject, "longitude")) {
                aMapLocation.setLongitude(jSONObject.getDouble("longitude"));
            }
            if (dm.a(jSONObject, "provider")) {
                aMapLocation.setProvider(jSONObject.getString("provider"));
            }
            if (dm.a(jSONObject, "province")) {
                aMapLocation.setProvince(jSONObject.getString("province"));
            }
            if (dm.a(jSONObject, "road")) {
                aMapLocation.setRoad(jSONObject.getString("road"));
            }
            if (dm.a(jSONObject, "time")) {
                aMapLocation.setTime(jSONObject.getLong("time"));
            }
            if (dm.a(jSONObject, "poiName")) {
                aMapLocation.setPoiName(jSONObject.getString("poiName"));
            }
            if (dm.a(jSONObject, "street")) {
                aMapLocation.setStreet(jSONObject.getString("street"));
            }
            if (dm.a(jSONObject, "number")) {
                aMapLocation.setNumber(jSONObject.getString("number"));
            }
            if (dm.a(jSONObject, "satellites")) {
                aMapLocation.setSatellites(jSONObject.getInt("satellites"));
            }
            if (dm.a(jSONObject, "aoiName")) {
                aMapLocation.setAoiName(jSONObject.getString("aoiName"));
            }
            if (dm.a(jSONObject, "desc")) {
                str3 = jSONObject.getString("desc");
            }
            Bundle bundle = new Bundle();
            bundle.putString("citycode", str2);
            bundle.putString("desc", str3);
            bundle.putString("adcode", str);
            aMapLocation.setExtras(bundle);
            return aMapLocation;
        } catch (Throwable th) {
            a(th, "CoreUtil", "transformLocation");
            return null;
        }
    }

    public static ep a(String str, String str2) {
        try {
            return new eo(str, str2, "AMAP_Location_SDK_Android 2.8.0").a((String[]) s.clone()).a();
        } catch (Throwable th) {
            a(th, "CoreUtil", "getSDKInfo");
            return null;
        }
    }

    public static String a() {
        return r;
    }

    public static void a(Context context) {
        try {
            if (dm.a(c(context))) {
                r = "http://abroad.apilocate.amap.com/mobile/binary";
                return;
            }
            try {
                if (l == null) {
                    l = new HashMap();
                }
                l.clear();
                l.put("a9a9d23668a1a7ea93de9b21d67e436a", "F13160D440C7D0229DA95450F66AF92154AC84DF088F8CA3100B2E8131D57F3DC67124D4C466056E7A3DFBE035E1B9A4B9DA4DB68AE65A43EDFD92F5C60EF0C9");
                l.put("fe643c382e5c3b3962141f1a2e815a78", "FB923EE67A8B4032DAA517DD8CD7A26FF7C25B0C3663F92A0B61251C4FFFA858DF169D61321C3E7919CB67DF8EFEC827");
                l.put("b2e8bd171989cb2c3c13bd89b4c1067a", "239CE372F804D4BE4EAFFD183668379BDF274440E6F246AB16BBE6F5D1D30DEACFBBF0C942485727FF12288228760A9E");
                l.put("9a571aa113ad987d626c0457828962e6", "D2FF99A88BEB04683D89470D4FA72B1749DA456AB0D0F1A476477CE5A6874F53A9106423D905F9D808C0FCE8E7F1E04AC642F01FE41D0C7D933971F45CBA72B7");
                l.put("668319f11506def6208d6afe320dfd52", "53E53D46011A6BBAEA4FAE5442E659E0577CDD336F930C28635C322FB3F51C3C63F7FBAC9EAE448DFA2E5E5D716C4807");
                l.put("256b0f26bb2a9506be6cfdb84028ae08", "AF2228680EDC323FBA035362EB7E1E38A0C33E1CF6F6FB805EE553A230CBA754CD9552EB9B546542CBE619E8293151BE");
            } catch (Throwable th) {
                a(th, "CoreUtil", "initUrlHash");
            }
            String a = cp.a(dx.f(context));
            k = a;
            if (a == null) {
                return;
            }
            if (a.length() != 0 && l != null && l.containsKey(a)) {
                String str = (String) l.get(a);
                str = (str == null || str.length() <= 0) ? null : new String(cp.d(a(str), a), "utf-8");
                if (str != null && str.length() > 0 && str.contains("http:")) {
                    r = str;
                }
            }
        } catch (Throwable th2) {
            a(th2, "CoreUtil", "checkUrl");
        }
    }

    public static void a(Throwable th, String str, String str2) {
        if (!"reportError".equals(str2)) {
            try {
                fa.b(th, str, str2);
            } catch (Throwable th2) {
            }
        }
    }

    public static boolean a(double d, double d2) {
        int i = (int) ((d2 - 73.0d) / 0.5d);
        int i2 = (int) ((d - 3.5d) / 0.5d);
        if (i2 < 0 || i2 >= 101 || i < 0 || i >= 124) {
            return false;
        }
        try {
            returncharAt(i + (i2 * 124)) == '1';
        } catch (Throwable th) {
            a(th, "CoreUtil", "isChina");
            return true;
        }
    }

    private static byte[] a(String str) {
        int i = 0;
        if (str == null || str.length() < 2) {
            return new byte[0];
        }
        String toLowerCase = str.toLowerCase(Locale.US);
        int length = toLowerCase.length() / 2;
        byte[] bArr = new byte[length];
        while (i < length) {
            bArr[i] = (byte) (Integer.parseInt(toLowerCase.substring(i * 2, (i * 2) + 2), 16) & 255);
            i++;
        }
        return bArr;
    }

    public static String b(Context context) {
        boolean b = dl.b(context, "pref", "ddex", false);
        if (b) {
            n = b;
            if (!t.contains("121")) {
                t += ";121";
            }
        }
        b = dl.b(context, "pref", "colde", false);
        if (b) {
            o = b;
            if (!t.contains("11Z")) {
                t += ";11Z";
            }
        }
        return t;
    }

    public static boolean b() {
        if (!p) {
            p = true;
            q = false;
        }
        return q;
    }

    private static String c(Context context) {
        String str = "";
        try {
            TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService("phone");
            if (telephonyManager != null) {
                String networkOperator = telephonyManager.getNetworkOperator();
                if (networkOperator != null && networkOperator.length() >= 3) {
                    return networkOperator.substring(0, 3);
                }
            }
        } catch (Throwable th) {
            a(th, "CoreUtil", "getMcc");
        }
        return str;
    }
}
